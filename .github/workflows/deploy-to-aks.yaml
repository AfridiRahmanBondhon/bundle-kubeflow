name: deploy-to-aks.yaml
on:
  push:
    branches:
      - main

jobs:
  deploy-ckf-to-aks:
    env:
      AZURE_CORE_OUTPUT: none
    needs: preprocess-input
    runs-on: ubuntu-24.04
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - name: Checkout repository
        uses: actions/checkout@v4
      - id: yaml-output
        name: Run YAML to Github Output Action
        uses: christian-ci/action-yaml-github-output@v2
        with:
          file_path: .github/dependencies.yaml
          main_key: ${{ matrix.bundle_version }}
      - name: Update ENV variables from inputs if available
        run: 'K8S_VERSION=${{ inputs.k8s_version || env.K8S_VERSION }}

          echo "K8S_VERSION=${K8S_VERSION}" >> $GITHUB_ENV

          UATS_BRANCH=${{ inputs.uats_branch || env.UATS_BRANCH }}

          echo "UATS_BRANCH=${UATS_BRANCH}" >> $GITHUB_ENV

          '
      - id: measurement-4
        name: Record Measurement After Update ENV variables from inputs if available
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Update ENV variables from inputs if available
          task: get-measurement
      - name: Install CLI tools
        run: "pip install tox \nsudo snap install juju --classic --channel=${{ env.JUJU_VERSION\
          \ }}/stable\nsudo snap install charmcraft --classic\njuju version\n"
      - id: measurement-6
        name: Record Measurement After Install CLI tools
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install CLI tools
          task: get-measurement
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.BUNDLE_KUBEFLOW_AKS_SERVICE_PRINCIPAL }}
      - name: Create resource group and cluster
        run: "# We need to remove the dot from version\n# due to cluster naming restrictions\n\
          version=${{ matrix.bundle_version }}\nKF_VERSION=\"kf-${version//.}\"\n\
          RESOURCE_GROUP=${KF_VERSION}-ResourceGroup\nNAME=${KF_VERSION}-AKSCluster\n\
          LOCATION=westeurope\necho \"RESOURCE_GROUP=${RESOURCE_GROUP}\" >> $GITHUB_ENV\n\
          echo \"NAME=${NAME}\" >> $GITHUB_ENV\necho \"LOCATION=${LOCATION}\" >> $GITHUB_ENV\n\
          az group create --name ${RESOURCE_GROUP} --location ${LOCATION}\naz aks\
          \ create \\\n  --resource-group ${RESOURCE_GROUP} \\\n  --name ${NAME} \\\
          \n  --kubernetes-version ${{ env.K8S_VERSION }} \\\n  --node-count 2 \\\n\
          \  --node-vm-size Standard_D8s_v3 \\\n  --node-osdisk-size 100 \\\n  --node-osdisk-type\
          \ Managed \\\n  --os-sku Ubuntu \\\n  --no-ssh-key\n"
      - id: measurement-9
        name: Record Measurement After Create resource group and cluster
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Create resource group and cluster
          task: get-measurement
      - name: Add AKS cloud to juju and bootstrap controller
        run: 'az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name
          ${{ env.NAME }} --admin

          juju add-k8s aks --client

          juju bootstrap aks aks-controller

          juju add-model kubeflow

          '
      - id: measurement-11
        name: Record Measurement After Add AKS cloud to juju and bootstrap controller
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Add AKS cloud to juju and bootstrap controller
          task: get-measurement
      - name: Test bundle deployment
        run: 'tox -vve test_bundle_deployment-${{ matrix.bundle_version }} -- --model
          kubeflow --keep-models -vv -s

          '
      - id: measurement-13
        name: Record Measurement After Test bundle deployment
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Test bundle deployment
          task: get-measurement
      - name: Run Kubeflow UATs
        run: 'git clone https://github.com/canonical/charmed-kubeflow-uats.git ~/charmed-kubeflow-uats

          cd ~/charmed-kubeflow-uats

          git checkout ${{ env.UATS_BRANCH }}

          tox -e kubeflow-remote

          '
      - id: measurement-15
        name: Record Measurement After Run Kubeflow UATs
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Run Kubeflow UATs
          task: get-measurement
      - if: always()
        name: Save debug artifacts
        uses: canonical/kubeflow-ci/actions/dump-charm-debug-artifacts@main
      - if: failure() || cancelled()
        name: Get juju status
        run: juju status
      - id: measurement-18
        name: Record Measurement After Get juju status
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Get juju status
          task: get-measurement
      - if: failure() || cancelled()
        name: Get juju debug logs
        run: juju debug-log --replay --no-tail
      - id: measurement-20
        name: Record Measurement After Get juju debug logs
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Get juju debug logs
          task: get-measurement
      - if: failure() || cancelled()
        name: Get all kubernetes resources
        run: kubectl get all -A
      - id: measurement-22
        name: Record Measurement After Get all kubernetes resources
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Get all kubernetes resources
          task: get-measurement
      - if: failure() || cancelled()
        name: Describe all pods
        run: kubectl describe pods --all-namespaces
      - id: measurement-24
        name: Record Measurement After Describe all pods
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Describe all pods
          task: get-measurement
      - if: failure() || cancelled()
        name: Get logs from pods with status = Pending
        run: kubectl -n kubeflow get pods | tail -n +2 | grep Pending | awk '{print
          $1}' | xargs -n1 kubectl -n kubeflow logs --all-containers=true --tail 100
      - id: measurement-26
        name: Record Measurement After Get logs from pods with status = Pending
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Get logs from pods with status = Pending
          task: get-measurement
      - if: failure() || cancelled()
        name: Get logs from pods with status = Failed
        run: kubectl -n kubeflow get pods | tail -n +2 | grep Failed | awk '{print
          $1}' | xargs -n1 kubectl -n kubeflow logs --all-containers=true --tail 100
      - id: measurement-28
        name: Record Measurement After Get logs from pods with status = Failed
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Get logs from pods with status = Failed
          task: get-measurement
      - if: failure() || cancelled()
        name: Get logs from pods with status = CrashLoopBackOff
        run: kubectl -n kubeflow get pods | tail -n +2 | grep CrashLoopBackOff | awk
          '{print $1}' | xargs -n1 kubectl -n kubeflow logs --all-containers=true
          --tail 100
      - id: measurement-30
        name: Record Measurement After Get logs from pods with status = CrashLoopBackOff
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Get logs from pods with status = CrashLoopBackOff
          task: get-measurement
      - if: always()
        name: Delete AKS cluster
        run: az aks delete --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.NAME
          }} --yes
      - id: measurement-32
        name: Record Measurement After Delete AKS cluster
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Delete AKS cluster
          task: get-measurement
      - if: always()
        name: Delete resource groups
        run: "az group delete --name ${{ env.RESOURCE_GROUP }} --yes\nif [ \"$(az\
          \ group exists --name MC_${{ env.RESOURCE_GROUP }}_${{ env.NAME }}_${{ env.LOCATION\
          \ }})\" = \"true\" ]; then\n  az group delete --name MC_${{ env.RESOURCE_GROUP\
          \ }}_${{ env.NAME }}_${{ env.LOCATION }} --yes\nfi\n"
      - id: measurement-34
        name: Record Measurement After Delete resource groups
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Delete resource groups
          task: get-measurement
      - if: always()
        name: Check that resource groups have been deleted, else fail
        run: "if [ \"$(az group exists --name ${{ env.RESOURCE_GROUP }} )\" = \"true\"\
          \ ] || [ \"$(az group exists --name MC_${{ env.RESOURCE_GROUP }}_${{ env.NAME\
          \ }}_${{ env.LOCATION }})\" = \"true\" ]; then\n  exit 1\nfi\n"
      - id: measurement-36
        name: Record Measurement After Check that resource groups have been deleted,
          else fail
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Check that resource groups have been deleted, else fail
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
    strategy:
      fail-fast: false
      matrix:
        bundle_version: ${{ fromJSON(needs.preprocess-input.outputs.processed_bundle_versions)
          }}
  preprocess-input:
    outputs:
      processed_bundle_versions: ${{ steps.process_bundle_versions.outputs.bundle_versions
        }}
    runs-on: ubuntu-24.04
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install CLI tools
        run: 'sudo snap install yq

          '
      - id: measurement-3
        name: Record Measurement After Install CLI tools
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install CLI tools
          task: get-measurement
      - id: process_bundle_versions
        name: Process bundle versions
        run: "if [[ \"${{ github.event_name }}\" == \"schedule\" ]]; then\n    # Use\
          \ `tr` to remove new lines as a workaround to:\n    # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/workflow-commands-for-github-actions#multiline-strngs\n\
          \    bundle_versions=$(yq '. | keys' .github/dependencies.yaml -o=json |\
          \ tr -d '\\n')\n    echo \"bundle_versions=${bundle_versions}\"\n    echo\
          \ \"bundle_versions=${bundle_versions}\" >> $GITHUB_OUTPUT\nelse\n    python\
          \ scripts/gh-actions/parse_versions.py \"${{ inputs.bundle_version }}\"\n\
          fi\n"
      - id: measurement-5
        name: Record Measurement After Process bundle versions
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Process bundle versions
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
